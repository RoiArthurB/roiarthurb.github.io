"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[282],{1028:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"TIL/network/headscaleACL","title":"Headscale ACL Security Setup","description":"How to isolate shared homelab devices from a shared Headscale network, while maintaining admin access ?","source":"@site/docs/TIL/network/headscaleACL.md","sourceDirName":"TIL/network","slug":"/TIL/network/headscaleACL","permalink":"/TIL/network/headscaleACL","draft":false,"unlisted":false,"editUrl":"https://github.com/RoiArthurB/roiarthurb.github.io/tree/main/docs/TIL/network/headscaleACL.md","tags":[],"version":"current","lastUpdatedBy":"RoiArthurB","lastUpdatedAt":1751988269000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"How to disable lid trigger on ubuntu","permalink":"/TIL/linux/disableLid"}}');var s=t(4848),i=t(8453);const o={},r="Headscale ACL Security Setup",l={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution: Tag-based ACLs",id:"solution-tag-based-acls",level:2},{value:"1. ACL Configuration",id:"1-acl-configuration",level:3},{value:"2. Tag Your Devices",id:"2-tag-your-devices",level:3},{value:"3. Apply Configuration",id:"3-apply-configuration",level:3},{value:"Result",id:"result",level:2},{value:"Key Points",id:"key-points",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"headscale-acl-security-setup",children:"Headscale ACL Security Setup"})}),"\n",(0,s.jsx)(n.p,{children:"How to isolate shared homelab devices from a shared Headscale network, while maintaining admin access ?"}),"\n",(0,s.jsx)(n.p,{children:"My point was to be able to block incoming connection, but still keep full access to it."}),"\n",(0,s.jsx)(n.h2,{id:"problem",children:"Problem"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Shared homelab with physical access by others"}),"\n",(0,s.jsx)(n.li,{children:"Need to prevent homelab devices from accessing personal devices"}),"\n",(0,s.jsx)(n.li,{children:"Need to maintain internal homelab devices connection"}),"\n",(0,s.jsx)(n.li,{children:"Admins need full access to everything"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"solution-tag-based-acls",children:"Solution: Tag-based ACLs"}),"\n",(0,s.jsxs)(n.p,{children:["The solution is simple, I have to manually ",(0,s.jsx)(n.strong,{children:"tag"})," every devices (most importantly the ones from the homelab, but it's good to tag them all explicitly to apply rules - I think headscale is denying all connection per default, at least on 26.1 - ) then use rules to isolate the homelab."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["For some magical reason, it's important to explicitly list each communication protocol (TCP, UDP and ICMP for ",(0,s.jsx)(n.code,{children:"ping"}),")."]}),(0,s.jsx)(n.p,{children:"Maybe it's not relevant anymore in the future"})]}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Go figured why it's not wildcatching by default \ud83e\udd37"}),(0,s.jsx)(n.p,{children:"I lost a lot of time on this one..."})]}),"\n",(0,s.jsxs)(n.p,{children:["You can either apply it with the ",(0,s.jsx)(n.code,{children:"policy.json"})," or with a web interface (like ",(0,s.jsx)(n.a,{href:"https://github.com/tale/headplane",children:"Headplane"}),")."]}),"\n",(0,s.jsx)(n.h3,{id:"1-acl-configuration",children:"1. ACL Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "groups": {\n    "group:trusted-users": ["admin1@", "admin2@"],\n    "group:work": ["shared-user@"]\n  },\n  "tagOwners": {\n    "tag:trusted": ["group:trusted-users"],\n    "tag:shared-homelab": ["group:trusted-users"]\n  },\n  "acls": [\n    {\n      "action": "accept",\n      "src": ["tag:trusted"],\n      "dst": ["tag:trusted:*", "tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:trusted"],\n      "proto": "icmp",\n      "dst": ["tag:trusted:*", "tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:trusted"],\n      "proto": "tcp",\n      "dst": ["tag:trusted:*", "tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:trusted"],\n      "proto": "udp",\n      "dst": ["tag:trusted:*", "tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:shared-homelab"],\n      "dst": ["tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:shared-homelab"],\n      "proto": "icmp",\n      "dst": ["tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:shared-homelab"],\n      "proto": "tcp",\n      "dst": ["tag:shared-homelab:*"]\n    },\n    {\n      "action": "accept",\n      "src": ["tag:shared-homelab"],\n      "proto": "udp",\n      "dst": ["tag:shared-homelab:*"]\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-tag-your-devices",children:"2. Tag Your Devices"}),"\n",(0,s.jsx)(n.p,{children:"Again, either with the command line as below, or with web ui:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Tag admin devices as trusted\nsudo -u headscale headscale nodes tag -i <node_id> tag:trusted\n\n# Tag homelab devices as isolated\nsudo -u headscale headscale nodes tag -i <node_id> tag:shared-homelab\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-apply-configuration",children:"3. Apply Configuration"}),"\n",(0,s.jsx)(n.h2,{id:"result",children:"Result"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"tag:trusted"})}),": Full access to everything (ping, SSH, HTTP, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"tag:shared-homelab"})}),": Isolated sandbox, can only talk to each other"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security"}),": Homelab can't initiate connections to personal devices"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stateful"}),": Return traffic automatically allowed"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-points",children:"Key Points"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use tags, not user-based ACLs (more reliable)"}),"\n",(0,s.jsx)(n.li,{children:"Explicit protocols needed (TCP, UDP, ICMP)"}),"\n",(0,s.jsxs)(n.li,{children:["Verify tags are applied: ",(0,s.jsx)(n.code,{children:"headscale nodes list --tags"})]}),"\n",(0,s.jsx)(n.li,{children:"ACLs are directional but stateful (meaning, if you can connect, it can answer; but might not be able to create the connection first)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);